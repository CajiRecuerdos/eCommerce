{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brayhan Camilo\\\\Documents\\\\QuestTicRepositoris\\\\PROYECTO-CICLO-4\\\\eCommerce-development\\\\interfaz2\\\\src\\\\StateProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StateContext = /*#__PURE__*/createContext(); // crear como el encierro de la api, desde aqui se rodeara a los otros archivos por decirlo asi\n\n// el StateProvider permite va a proveer la herramienta para pasar los datos\n// de un lado a otro. Osea de un archivo a otro.\n\nexport const StateProvider = _ref => {\n  _s();\n  let {\n    reducer,\n    initialState,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: useReducer(reducer, initialState),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n// UseStateValue nos permite consumir desde cualquier componente los cambios \n// de estado que tenga la api\n\n// se debe usar siempre cuando llamas a los datos\n_s(StateProvider, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n_c = StateProvider;\nexport const useStateValue = () => {\n  _s2();\n  return useContext(StateContext);\n};\n_s2(useStateValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"names":["createContext","useContext","useReducer","StateContext","StateProvider","reducer","initialState","children","useStateValue"],"sources":["C:/Users/Brayhan Camilo/Documents/QuestTicRepositoris/PROYECTO-CICLO-4/eCommerce-development/interfaz2/src/StateProvider.js"],"sourcesContent":["import {createContext, useContext, useReducer} from \"react\";\n\nexport const StateContext = createContext(); // crear como el encierro de la api, desde aqui se rodeara a los otros archivos por decirlo asi\n\n\n// el StateProvider permite va a proveer la herramienta para pasar los datos\n// de un lado a otro. Osea de un archivo a otro.\n\nexport const StateProvider =({reducer, initialState, children})=>(\n    <StateContext.Provider value ={useReducer(reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\n// UseStateValue nos permite consumir desde cualquier componente los cambios \n// de estado que tenga la api\n\n// se debe usar siempre cuando llamas a los datos\n\nexport const useStateValue = () => useContext(StateContext);"],"mappings":";;;AAAA,SAAQA,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAO,OAAO;AAAC;AAE5D,OAAO,MAAMC,YAAY,gBAAGH,aAAa,EAAE,CAAC,CAAC;;AAG7C;AACA;;AAEA,OAAO,MAAMI,aAAa,GAAE;EAAA;EAAA,IAAC;IAACC,OAAO;IAAEC,YAAY;IAAEC;EAAQ,CAAC;EAAA,oBAC1D,QAAC,YAAY,CAAC,QAAQ;IAAC,KAAK,EAAGL,UAAU,CAACG,OAAO,EAAEC,YAAY,CAAE;IAAA,UAC5DC;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAAA,CAC3B;;AAED;AACA;;AAEA;AAAA,GATaH,aAAa;AAAA,KAAbA,aAAa;AAW1B,OAAO,MAAMI,aAAa,GAAG;EAAA;EAAA,OAAMP,UAAU,CAACE,YAAY,CAAC;AAAA;AAAC,IAA/CK,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module"}